:;# shell script to convert ABC or MEI music notation to other format
# using abc2svg and quickjs (https://bellard.org/quickjs/)

exec qjs --std -e '

// interpreter specific functions
function load(fn) {
	return std.loadScript(fn)
}
var abc2svg = {
	print: function(str) {
		print(str)
	},
	printErr: function(str) {
		std.err.printf("%s\n", str)
	},
	quit: function() {
		std.exit(1)
	},
	readFile: function(fname) {
	    var	f, b

		try {
			f = std.open(fname, "r")
		} catch(e) {
			return ""
		}

		b = f.readAsString()
		f.close()
		return b
	}, // readfile()
	get_mtime: function(fn) {
		return new Date(os.stat(fn)[0].mtime)
	},
	loadjs: function(fn, relay, onerror) {
		try {
			load(path + fn)
			if (relay)
				relay()
		} catch(e) {
			if (onerror)
				onerror()
			else
				printErr("Cannot read file " + fn)
		}
	} // loadjs()
} // abc2svg

// --- main ---

    var	i,
	args = scriptArgs,
	core = "abc2svg-1.js",
	path = args.shift().	// the 1st argument is the script name
			match(/.*\//)

	path = path ? path[0] : ""

	i = args.length
	while (--i >= 0) {
		if (/\.mei$/.test(args[i])) {
			core = "mei2svg-1.js"
			break
		}
	}

	load(path + core)
	load(path + "cmdline.js")

	if (/\.js$/.test(args[0])) {
		if (args[0][0] == "/")
			load(args[0])
		else
			load(path + args[0])
		args.shift()
	}
	if (typeof abc2svg.abc_init != "function")
		load(path + "toxhtml.js")
	if (!args[0]) {
		abc2svg.printErr("ABC/MEI translator with QuickJS\
 and abc2svg-" + abc2svg.version + " " + abc2svg.vdate + "\n\
Usage:\n\
  abcqjs [script.js] [options] ABC_file [[options] ABC_file]* [options]\n\
Arguments:\n\
  script.js  generation script to load - default: toxhtml.js (XHTML+SVG)\n\
  options    ABC options (the last options are moved before the last file)\n\
  ABC_file   ABC file")
		abc2svg.quit()
	}
	abc_cmd("abcqjs", args)
' $0 "$@"

The previous solution with the shebang line as
#!/usr/bin/env -S qjs --std
did not work with non-GNU versions of env
